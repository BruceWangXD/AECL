<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aecl.demo.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.aecl.demo.entity.Course">
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_code" jdbcType="VARCHAR" property="courseCode" />
    <result column="population" jdbcType="INTEGER" property="population" />
    <result column="instructor_name" jdbcType="VARCHAR" property="instructorName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, course_code, population, instructor_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from COURSE
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from COURSE
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aecl.demo.entity.Course">
    insert into COURSE (course_id, course_name, course_code, 
      population, instructor_name)
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{courseCode,jdbcType=VARCHAR}, 
      #{population,jdbcType=INTEGER}, #{instructorName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aecl.demo.entity.Course">
    insert into COURSE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseCode != null">
        course_code,
      </if>
      <if test="population != null">
        population,
      </if>
      <if test="instructorName != null">
        instructor_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCode != null">
        #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="population != null">
        #{population,jdbcType=INTEGER},
      </if>
      <if test="instructorName != null">
        #{instructorName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aecl.demo.entity.Course">
    update COURSE
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCode != null">
        course_code = #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="population != null">
        population = #{population,jdbcType=INTEGER},
      </if>
      <if test="instructorName != null">
        instructor_name = #{instructorName,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aecl.demo.entity.Course">
    update COURSE
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_code = #{courseCode,jdbcType=VARCHAR},
      population = #{population,jdbcType=INTEGER},
      instructor_name = #{instructorName,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>

  <select id="getAllCourse" resultMap="BaseResultMap">
    select *
    from COURSE
  </select>

  <select id="getHotCourses" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from COURSE
    order by population desc limit 5
  </select>


</mapper>